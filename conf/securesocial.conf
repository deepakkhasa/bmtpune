#####################################################################################
#
# SecureSocial 2 Settings
#
#####################################################################################

securesocial {
	#
	# Where to redirect the user if SecureSocial can't figure that out from
	# the request that led the use to the login page
	#
	onLoginGoTo=/takeappointment

	#
	# Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
	#
	onLogoutGoTo=/login

	twitter {
		requestTokenUrl="https://twitter.com/oauth/request_token"
		accessTokenUrl="https://twitter.com/oauth/access_token"
		authorizationUrl="https://twitter.com/oauth/authenticate"
		consumerKey=d2lMrMfCFuZf2JNpyydq1Q
		consumerSecret=Qn6X7IqRm8ZrsX6bBJhDEVzaAWXUwRs43E8L6nDgX8
	}

	facebook {
		authorizationUrl="https://graph.facebook.com/oauth/authorize"
		accessTokenUrl="https://graph.facebook.com/oauth/access_token"
		clientId="395053670543151"
		clientSecret="5ecfd14d640088a8938c947d46142638"
		# this scope is the minimum SecureSocial requires.  You can add more if required by your app.
		scope=email
	}

	google {
		authorizationUrl="https://accounts.google.com/o/oauth2/auth"
		accessTokenUrl="https://accounts.google.com/o/oauth2/token"
		clientId="925894800945.apps.googleusercontent.com"
		clientSecret="5EbqozlLBxiOyYcrpd9uaP7m"
		scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
	}

    linkedin {
        requestTokenUrl="https://api.linkedin.com/uas/oauth/requestToken"
        accessTokenUrl="https://api.linkedin.com/uas/oauth/accessToken"
        authorizationUrl="https://api.linkedin.com/uas/oauth/authenticate"
        consumerKey=4di6vnacmt5a
        consumerSecret=sPN1Db86fsnHkLa8
    }
}
